{"remainingRequest":"/Users/lucasbesen/Documents/react-kanban-dnd/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-react\",[\"/Users/lucasbesen/Documents/react-kanban-dnd/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[\"loadable-components/babel\",\"@babel/plugin-proposal-object-rest-spread\",\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-proposal-export-default-from\",\"@babel/plugin-proposal-export-namespace-from\",[\"/Users/lucasbesen/Documents/react-kanban-dnd/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/lucasbesen/Documents/react-kanban-dnd/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/lucasbesen/Documents/react-kanban-dnd/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/lucasbesen/Documents/react-kanban-dnd/src/List.tsx","dependencies":[{"path":"/Users/lucasbesen/Documents/react-kanban-dnd/src/List.tsx","mtime":1539805148398},{"path":"/Users/lucasbesen/Documents/react-kanban-dnd/node_modules/cache-loader/dist/cjs.js","mtime":1539905369156},{"path":"/Users/lucasbesen/Documents/react-kanban-dnd/node_modules/babel-loader/lib/index.js","mtime":1538141991121},{"path":"/Users/lucasbesen/Documents/react-kanban-dnd/node_modules/react-docgen-typescript-loader/dist/index.js","mtime":1539905369737}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/lucasbesen/Documents/react-kanban-dnd/src/List.tsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  min-height: 250px;\\n  margin-bottom: 10px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: 'rgba(96, 115, 137, 0.04)';\\n  display: flex;\\n  flex-direction: column;\\n  opacity: \", \";\\n  padding: 10px;\\n  border-radius: 2px;\\n  border-left: 1px solid rgba(96, 115, 137, 0.12);\\n  border-right: 1px solid rgba(96, 115, 137, 0.12);\\n  border-bottom: 1px solid rgba(96, 115, 137, 0.12);\\n  padding-bottom: 0;\\n  transition: background-color 0.1s ease, opacity 0.1s ease;\\n  user-select: none;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport * as React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport styledComponents from 'styled-components';\nimport InnerList from './InnerList';\nvar Wrapper = styledComponents('div')(_templateObject(), function (_ref) {\n  var isDropDisabled = _ref.isDropDisabled;\n  return isDropDisabled ? 0.5 : 'inherit';\n});\nvar DropZone = styledComponents('div')(_templateObject2());\n\nvar List = function List(_ref2) {\n  var isDropDisabled = _ref2.isDropDisabled,\n      listId = _ref2.listId,\n      column = _ref2.column,\n      renderCard = _ref2.renderCard,\n      columnStyle = _ref2.columnStyle,\n      cardWrapperStyle = _ref2.cardWrapperStyle;\n  return React.createElement(Droppable, {\n    droppableId: listId || 'LIST',\n    isDropDisabled: isDropDisabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, function (dropProvided, dropSnapshot) {\n    return React.createElement(Wrapper, Object.assign({\n      style: columnStyle,\n      isDraggingOver: dropSnapshot.isDraggingOver,\n      isDropDisabled: isDropDisabled\n    }, dropProvided.droppableProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(DropZone, {\n      innerRef: dropProvided.innerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(InnerList, {\n      column: column,\n      renderCard: renderCard,\n      cardWrapperStyle: cardWrapperStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), dropProvided.placeholder));\n  });\n};\n\nvar _default = List;\nexport default _default;\n\ntry {\n  // @ts-ignore\n  List.displayName = \"List\"; // @ts-ignore\n\n  List.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"List\",\n    \"props\": {\n      \"isDropDisabled\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"isDropDisabled\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"listId\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"listId\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"column\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"column\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"ColumnInterface\"\n        }\n      },\n      \"renderCard\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"renderCard\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"Function\"\n        }\n      },\n      \"columnStyle\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"columnStyle\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"Object\"\n        }\n      },\n      \"cardWrapperStyle\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"cardWrapperStyle\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"Object\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/List.tsx#List\"] = {\n      docgenInfo: List.__docgenInfo,\n      name: \"List\",\n      path: \"src/List.tsx#List\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Wrapper, \"Wrapper\", \"/Users/lucasbesen/Documents/react-kanban-dnd/src/List.tsx\");\n  reactHotLoader.register(DropZone, \"DropZone\", \"/Users/lucasbesen/Documents/react-kanban-dnd/src/List.tsx\");\n  reactHotLoader.register(List, \"List\", \"/Users/lucasbesen/Documents/react-kanban-dnd/src/List.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/lucasbesen/Documents/react-kanban-dnd/src/List.tsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/lucasbesen/Documents/react-kanban-dnd/src/List.tsx"],"names":["React","Droppable","styledComponents","InnerList","Wrapper","isDropDisabled","DropZone","List","listId","column","renderCard","columnStyle","cardWrapperStyle","dropProvided","dropSnapshot","isDraggingOver","droppableProps","innerRef","placeholder","displayName","__docgenInfo","STORYBOOK_REACT_CLASSES","docgenInfo","name","path","__react_docgen_typescript_loader_error"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Droppable,\n  DroppableProvided,\n  DroppableStateSnapshot,\n  DroppableProps,\n} from 'react-beautiful-dnd';\nimport styledComponents from 'styled-components';\n\nimport InnerList from './InnerList';\nimport { ColumnInterface } from './ReactKanban';\n\nconst Wrapper = styledComponents<DroppableProps, any>('div')`\n  background-color: 'rgba(96, 115, 137, 0.04)';\n  display: flex;\n  flex-direction: column;\n  opacity: ${({ isDropDisabled }: { isDropDisabled: boolean }) =>\n    isDropDisabled ? 0.5 : 'inherit'};\n  padding: 10px;\n  border-radius: 2px;\n  border-left: 1px solid rgba(96, 115, 137, 0.12);\n  border-right: 1px solid rgba(96, 115, 137, 0.12);\n  border-bottom: 1px solid rgba(96, 115, 137, 0.12);\n  padding-bottom: 0;\n  transition: background-color 0.1s ease, opacity 0.1s ease;\n  user-select: none;\n`;\n\nconst DropZone = styledComponents<DroppableProvided, any>('div')`\n  min-height: 250px;\n  margin-bottom: 10px;\n`;\n\nconst List = ({\n  isDropDisabled,\n  listId,\n  column,\n  renderCard,\n  columnStyle,\n  cardWrapperStyle,\n}: {\n  isDropDisabled?: boolean;\n  listId: string;\n  column: ColumnInterface;\n  renderCard: Function;\n  columnStyle: Object;\n  cardWrapperStyle: Object;\n}) => (\n  <Droppable droppableId={listId || 'LIST'} isDropDisabled={isDropDisabled}>\n    {(dropProvided: DroppableProvided, dropSnapshot: DroppableStateSnapshot) => (\n      <Wrapper\n        style={columnStyle}\n        isDraggingOver={dropSnapshot.isDraggingOver}\n        isDropDisabled={isDropDisabled}\n        {...dropProvided.droppableProps}\n      >\n        <DropZone innerRef={dropProvided.innerRef}>\n          <InnerList column={column} renderCard={renderCard} cardWrapperStyle={cardWrapperStyle} />\n          {dropProvided.placeholder}\n        </DropZone>\n      </Wrapper>\n    )}\n  </Droppable>\n);\n\nexport default List;\ntry {\n    // @ts-ignore\n    List.displayName = \"List\";\n    // @ts-ignore\n    List.__docgenInfo = { \"description\": \"\", \"displayName\": \"List\", \"props\": { \"isDropDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDropDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"listId\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"listId\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"column\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"column\", \"required\": true, \"type\": { \"name\": \"ColumnInterface\" } }, \"renderCard\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"renderCard\", \"required\": true, \"type\": { \"name\": \"Function\" } }, \"columnStyle\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"columnStyle\", \"required\": true, \"type\": { \"name\": \"Object\" } }, \"cardWrapperStyle\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"cardWrapperStyle\", \"required\": true, \"type\": { \"name\": \"Object\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/List.tsx#List\"] = { docgenInfo: List.__docgenInfo, name: \"List\", path: \"src/List.tsx#List\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]}]}