{"remainingRequest":"/Users/lucasbesen/Documents/react-kanban-dnd/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-react\",[\"/Users/lucasbesen/Documents/react-kanban-dnd/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[\"loadable-components/babel\",\"@babel/plugin-proposal-object-rest-spread\",\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-proposal-export-default-from\",\"@babel/plugin-proposal-export-namespace-from\",[\"/Users/lucasbesen/Documents/react-kanban-dnd/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/lucasbesen/Documents/react-kanban-dnd/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/lucasbesen/Documents/react-kanban-dnd/node_modules/react-docgen-typescript-loader/dist/index.js?{\"tsconfigPath\":\"./tsconfig.json\"}!/Users/lucasbesen/Documents/react-kanban-dnd/src/Card.tsx","dependencies":[{"path":"/Users/lucasbesen/Documents/react-kanban-dnd/src/Card.tsx","mtime":1539805148396},{"path":"/Users/lucasbesen/Documents/react-kanban-dnd/node_modules/cache-loader/dist/cjs.js","mtime":1539905369156},{"path":"/Users/lucasbesen/Documents/react-kanban-dnd/node_modules/babel-loader/lib/index.js","mtime":1538141991121},{"path":"/Users/lucasbesen/Documents/react-kanban-dnd/node_modules/react-docgen-typescript-loader/dist/index.js","mtime":1539905369737}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/lucasbesen/Documents/react-kanban-dnd/src/Card.tsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  box-shadow: \", \";\\n  flex-grow: 1;\\n  flex-basis: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  margin-bottom: 8px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport * as React from 'react';\nimport styledComponents from 'styled-components';\nvar Container = styledComponents('a')(_templateObject());\nvar Content = styledComponents('div')(_templateObject2(), function (_ref) {\n  var isDragging = _ref.isDragging;\n  return isDragging ? '2px 2px 1px rgba(0,0,0,0.2)' : 'none';\n});\n\nvar Card = function Card(_ref2) {\n  var isDragging = _ref2.isDragging,\n      provided = _ref2.provided,\n      renderCard = _ref2.renderCard,\n      row = _ref2.row,\n      cardWrapperStyle = _ref2.cardWrapperStyle;\n  return React.createElement(Container, Object.assign({\n    innerRef: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Content, {\n    style: cardWrapperStyle,\n    isDragging: isDragging,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, renderCard(row)));\n};\n\nvar _default = Card;\nexport default _default;\n\ntry {\n  // @ts-ignore\n  Card.displayName = \"Card\"; // @ts-ignore\n\n  Card.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"Card\",\n    \"props\": {\n      \"isDragging\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"isDragging\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"provided\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"provided\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"DraggableProvided\"\n        }\n      },\n      \"renderCard\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"renderCard\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"Function\"\n        }\n      },\n      \"row\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"row\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"RowInterface\"\n        }\n      },\n      \"cardWrapperStyle\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"cardWrapperStyle\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"Object\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/Card.tsx#Card\"] = {\n      docgenInfo: Card.__docgenInfo,\n      name: \"Card\",\n      path: \"src/Card.tsx#Card\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Container, \"Container\", \"/Users/lucasbesen/Documents/react-kanban-dnd/src/Card.tsx\");\n  reactHotLoader.register(Content, \"Content\", \"/Users/lucasbesen/Documents/react-kanban-dnd/src/Card.tsx\");\n  reactHotLoader.register(Card, \"Card\", \"/Users/lucasbesen/Documents/react-kanban-dnd/src/Card.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/lucasbesen/Documents/react-kanban-dnd/src/Card.tsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/lucasbesen/Documents/react-kanban-dnd/src/Card.tsx"],"names":["React","styledComponents","Container","Content","isDragging","Card","provided","renderCard","row","cardWrapperStyle","innerRef","draggableProps","dragHandleProps","displayName","__docgenInfo","STORYBOOK_REACT_CLASSES","docgenInfo","name","path","__react_docgen_typescript_loader_error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,gBAAP,MAA6B,mBAA7B;AAUA,IAAMC,SAAS,GAAGD,gBAAgB,CAAyB,GAAzB,CAAnB,mBAAf;AAEA,IAAME,OAAO,GAAGF,gBAAgB,CAAoB,KAApB,CAAnB,qBACG;AAAA,MAAGG,UAAH,QAAGA,UAAH;AAAA,SACZA,UAAU,GAAG,6BAAH,GAAmC,MADjC;AAAA,CADH,CAAb;;AAUA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MACXD,UADW,SACXA,UADW;AAAA,MAEXE,QAFW,SAEXA,QAFW;AAAA,MAGXC,UAHW,SAGXA,UAHW;AAAA,MAIXC,GAJW,SAIXA,GAJW;AAAA,MAKXC,gBALW,SAKXA,gBALW;AAAA,SAaX,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAEH,QAAQ,CAACI;AADrB,KAEMJ,QAAQ,CAACK,cAFf,EAGML,QAAQ,CAACM,eAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEH,gBAAhB;AAAkC,IAAA,UAAU,EAAEL,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,UAAU,CAACC,GAAD,CADb,CALF,CAbW;AAAA,CAAb;;eAwBeH,I;AAAf;;AACA,IAAI;AACA;AACAA,EAAAA,IAAI,CAACQ,WAAL,GAAmB,MAAnB,CAFA,CAGA;;AACAR,EAAAA,IAAI,CAACS,YAAL,GAAoB;AAAE,mBAAe,EAAjB;AAAqB,mBAAe,MAApC;AAA4C,aAAS;AAAE,oBAAc;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,YAAnD;AAAiE,oBAAY,IAA7E;AAAmF,gBAAQ;AAAE,kBAAQ;AAAV;AAA3F,OAAhB;AAAoI,kBAAY;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,UAAnD;AAA+D,oBAAY,IAA3E;AAAiF,gBAAQ;AAAE,kBAAQ;AAAV;AAAzF,OAAhJ;AAA4Q,oBAAc;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,YAAnD;AAAiE,oBAAY,IAA7E;AAAmF,gBAAQ;AAAE,kBAAQ;AAAV;AAA3F,OAA1R;AAA+Y,aAAO;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,KAAnD;AAA0D,oBAAY,IAAtE;AAA4E,gBAAQ;AAAE,kBAAQ;AAAV;AAApF,OAAtZ;AAAwgB,0BAAoB;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,kBAAnD;AAAuE,oBAAY,IAAnF;AAAyF,gBAAQ;AAAE,kBAAQ;AAAV;AAAjG;AAA5hB;AAArD,GAApB,CAJA,CAKA;;AACA,MAAI,OAAOC,uBAAP,KAAmC,WAAvC,EACI;AACAA,IAAAA,uBAAuB,CAAC,mBAAD,CAAvB,GAA+C;AAAEC,MAAAA,UAAU,EAAEX,IAAI,CAACS,YAAnB;AAAiCG,MAAAA,IAAI,EAAE,MAAvC;AAA+CC,MAAAA,IAAI,EAAE;AAArD,KAA/C;AACP,CATD,CAUA,OAAOC,sCAAP,EAA+C,CAAG;;;;;;;;;;;;;0BA/C5CjB,S;0BAEAC,O;0BAUAE,I","sourcesContent":["import * as React from 'react';\nimport styledComponents from 'styled-components';\n\nimport { DraggableProvided } from 'react-beautiful-dnd';\n\nimport { RowInterface } from './ReactKanban';\n\ninterface ContentProps {\n  isDragging: boolean;\n}\n\nconst Container = styledComponents<DraggableProvided, any>('a')``;\n\nconst Content = styledComponents<ContentProps, any>('div')`\n  box-shadow: ${({ isDragging }: { isDragging: boolean }) =>\n    isDragging ? '2px 2px 1px rgba(0,0,0,0.2)' : 'none'};\n  flex-grow: 1;\n  flex-basis: 100%;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 8px;\n`;\n\nconst Card = ({\n  isDragging,\n  provided,\n  renderCard,\n  row,\n  cardWrapperStyle,\n}: {\n  isDragging: boolean;\n  provided: DraggableProvided;\n  renderCard: Function;\n  row: RowInterface;\n  cardWrapperStyle: Object;\n}) => (\n  <Container\n    innerRef={provided.innerRef}\n    {...provided.draggableProps}\n    {...provided.dragHandleProps}\n  >\n    <Content style={cardWrapperStyle} isDragging={isDragging}>\n      {renderCard(row)}\n    </Content>\n  </Container>\n);\n\nexport default Card;\ntry {\n    // @ts-ignore\n    Card.displayName = \"Card\";\n    // @ts-ignore\n    Card.__docgenInfo = { \"description\": \"\", \"displayName\": \"Card\", \"props\": { \"isDragging\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDragging\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"provided\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"provided\", \"required\": true, \"type\": { \"name\": \"DraggableProvided\" } }, \"renderCard\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"renderCard\", \"required\": true, \"type\": { \"name\": \"Function\" } }, \"row\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"row\", \"required\": true, \"type\": { \"name\": \"RowInterface\" } }, \"cardWrapperStyle\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"cardWrapperStyle\", \"required\": true, \"type\": { \"name\": \"Object\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/Card.tsx#Card\"] = { docgenInfo: Card.__docgenInfo, name: \"Card\", path: \"src/Card.tsx#Card\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]}]}